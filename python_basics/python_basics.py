# -*- coding: utf-8 -*-
"""python_basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K9fTy7csSF2kOWY2YvTx6auJJBCpr6yU

system specifications
"""
import matplotlib.pyplot as plt
import seaborn as sns

# !cat /proc/cpuinfo

# !cat /proc/meminfo

# !pip install pandas

import pandas as pd
import numpy as np

# df=pd.read_csv('/content/sample_data/california_housing_train.csv')
# print(df.head())

# !ls sample_data/

"""print function"""

print("AI")

print(type(8))

import numpy as np

list1=[1,2,3,4,5];
print(list1)
print(type(list1))

np_list=np.array([1,2,3,4,5])
print(np_list)
print(type(np_list))

a=np.array([[1,2],[3,4]])
print(a)
print(a.shape)

print(np.zeros((3,3)))

print(np.full((3,3),5))

import pandas as pd

from sklearn.datasets import load_diabetes

diabetes_dataset=load_diabetes()
diabetes_df=pd.DataFrame(diabetes_dataset.data)
print(diabetes_df)

# example_dataset=pd.read_csv('/content/sample_data/mnist_test.csv')
# print(example_dataset.head())

import numpy as np

random_df=pd.DataFrame(np.random.rand(20,10))
print(random_df.head())

diabetes_df.info()

diabetes_df.isnull().sum()

diabetes_df.value_counts('s6')

diabetes_df.count()

diabetes_df.mean()

diabetes_df.std()

diabetes_df.max()

diabetes_df.describe()

diabetes_df.drop(index=0,axis=0)



x=np.linspace(0,10,100)
y=np.sin(x)
plt.plot(x,y)
plt.xlabel('x')
plt.ylabel('sin(x)')
plt.title('sine wave')
plt.grid()

fig=plt.figure()
ax=fig.add_axes([0,0,1,1])
languages=['English','French','Spanish','Latin','German']
people=[100,50,150,40,70]
ax.bar(languages,people)
plt.xlabel('Languages')
plt.ylabel('Number of people')

fig1=plt.figure()
ax=fig1.add_axes([0,0,1,1])
languages=['English','French','Spanish','Latin','German']
people=[100,50,150,40,70]
ax.pie(people,labels=languages,autopct="%1.1f%%")

x=np.linspace(0,10,30)
y=np.sin(x)
z=np.cos(x)
fig2=plt.figure()
ax=fig2.add_axes([0,0,1,1])
ax.scatter(x,y)

x=np.linspace(0,10,100)
fig3=plt.figure()
ax=plt.axes(projection='3d')
ax.scatter(x,np.sin(x),np.cos(x))

tips=sns.load_dataset('tips')

tips.head()

sns.set_theme()

sns.relplot(data=tips,x='total_bill',y='tip',col='time',hue='smoker',style='smoker',size='size')

iris=sns.load_dataset('iris')

iris.head()

sns.scatterplot(data=iris,x='sepal_length',y='petal_length',hue='species')

sns.scatterplot(data=iris,x='sepal_length',y='petal_width',hue='species')

titanic=sns.load_dataset('titanic')

titanic.head()

sns.countplot(x='class',data=titanic)

sns.countplot(x='survived',data=titanic)

sns.barplot(x='sex',y='survived',hue='class',data=titanic)

from sklearn.datasets import load_breast_cancer

breast_cancer=load_breast_cancer()

print(breast_cancer)

breast_cancer_df=pd.DataFrame(breast_cancer.data,columns=breast_cancer.feature_names)

breast_cancer_df.head()

