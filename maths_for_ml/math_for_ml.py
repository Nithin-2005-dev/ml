# -*- coding: utf-8 -*-
"""Math_for_ml.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WkNe9kgSY5AnUmACpseKOQaptIHY5NP3
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

sns.set()

"""Plotting a vector"""

plt.quiver(0,0,4,5)
plt.show()

plt.quiver(0,0,4,5,scale_units='xy',angles='xy',scale=1,color='b')
plt.xlim(-8,8)
plt.ylim(-8,8)
plt.show()

"""Addition of two vectors"""

plt.quiver(0,0,-3,2,scale_units='xy',angles='xy',scale=1,color='r')
plt.quiver(0,0,4,5,scale_units='xy',angles='xy',scale=1,color='b')
plt.quiver(0,0,1,7,scale_units='xy',angles='xy',scale=1,color='y')
plt.xlim(-10,10)
plt.ylim(-10,10)
plt.show()

"""Subtraction of two vectors"""

plt.quiver(0,0,4,2,scale_units='xy',angles='xy',color='b',scale=1)
plt.quiver(0,0,-1,-3,scale_units='xy',angles='xy',color='r',scale=1)
plt.quiver(0,0,5,5,scale_units='xy',angles='xy',color='y',scale=1)
plt.xlim(-6,6)
plt.ylim(-6,6)
plt.show()

"""Multiplying a vector by a scalar"""

vector_1=np.asarray([0,0,3,2])
plt.quiver(0,0,3,2,scale_units='xy',angles='xy',color='b',scale=1)
plt.quiver(0,0,-6,-4,scale_units='xy',angles='xy',color='r',scale=1)
plt.xlim(-10,10)
plt.ylim(-10,10)
plt.show()

"""Dot product of two vecotrs"""

a=np.array([2,3])
b=np.array([4,4])
a_dot_b=np.dot(a,b)
print(a_dot_b)

c=np.array([40,20,35])
d=np.array([53,24,68])
c_dot_d=np.dot(c,d)
print(c_dot_d)

"""cross product of 2 vectors

"""

a=np.array([1,2,3])
b=np.array([5,4,4])
a_cross_b=np.cross(a,b)
print(a_cross_b)

fig=plt.figure()
ax=fig.add_subplot(projection='3d')
ax.quiver(0,0,0,1,2,3,color='b')
ax.quiver(0,0,0,5,4,4,color='r')
ax.quiver(0,0,0,-4,11,-6,color='g')
ax.set_xlim(-10,10)
ax.set_ylim(-10,10)
ax.set_zlim(-10,10)
plt.show()

"""projection of 'a' vvector on 'v' vector

proj=((a.v)/v^2)*v
"""

a=np.array([23,45,62])
v=np.array([45,82,67])
magnitude_of_v=np.sqrt(sum(v**2))
projection=(np.dot(a,v)/(magnitude_of_v)**2)*v
print(projection)

fig=plt.figure()
ax=fig.add_subplot(projection='3d')
ax.quiver(0,0,0,23,45,62,color='b')
ax.quiver(0,0,0,45,82,67,color='r')
ax.quiver(0,0,0,30.18242937,54.99909352,44.93828373,color='g')
ax.set_xlim(-100,100)
ax.set_ylim(-100,100)
ax.set_zlim(-100,100)
plt.show()

matrix_1=np.array([[2,3],[6,7]])
print(matrix_1)

matrix_1.shape

"""transpose of a matrix"""

a=np.random.randint(100,size=(2,3))
print(a)
b=np.transpose(a)
print(b)

"""Matrix operations"""

matrix_1=np.array([[1,2,3],[4,5,6],[7,8,9]])
matrix_2=np.array([[1,3,3],[1,5,2],[2,1,5]])
print('matrix 1')
print(matrix_1)
print('matrix 2')
print(matrix_2)
print('addition')
print(matrix_1+matrix_2)
print('subtraction')
print(matrix_1-matrix_2)
print('multiplication')
print(np.dot(matrix_1,matrix_2))
print('division')
print(matrix_1/matrix_2)

